% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analyze_StudyKRI_PredictBounds.R
\name{Analyze_StudyKRI_PredictBounds}
\alias{Analyze_StudyKRI_PredictBounds}
\title{Calculate Confidence Intervals from Bootstrap Distribution}
\usage{
Analyze_StudyKRI_PredictBounds(
  dfInput,
  vBy = "StudyID",
  nConfLevel = 0.95,
  strMetricCol = "Metric",
  strStudyMonthCol = "StudyMonth"
)
}
\arguments{
\item{dfInput}{data.frame or tbl. Bootstrapped study-level data from
\code{Transform_CumCount} with \code{BootstrapRep} column. Must contain columns:
\code{vBy} columns, \code{StudyMonth}, \code{Metric}, \code{BootstrapRep}.}

\item{vBy}{character. Vector of column names for grouping CI calculation.
Use \code{"StudyID"} for single study analysis, \code{character(0)} for combined
multi-study analysis. Default: \code{"StudyID"}.}

\item{nConfLevel}{numeric. Confidence level between 0 and 1. Default: 0.95
(95\% confidence interval).}

\item{strMetricCol}{character. Name of metric column. Default: \code{"Metric"}.}

\item{strStudyMonthCol}{character. Name of study month column.
Default: \code{"StudyMonth"}.}
}
\value{
A data.frame (or tbl_lazy if input was lazy) with columns:
\itemize{
\item \code{vBy} columns (if \code{length(vBy) > 0})
\item \code{StudyMonth}: Sequential month number
\item \code{MedianMetric}: Median metric value across bootstrap samples
\item \code{LowerBound}: Lower confidence bound
\item \code{UpperBound}: Upper confidence bound
\item \code{BootstrapCount}: Number of bootstrap samples used
}
}
\description{
Calculates percentile-based confidence intervals from bootstrap distributions
of study-level KRI metrics. Returns median estimates with upper and lower
confidence bounds for each time point. Supports both single-study and
multi-study comparison scenarios with full dbplyr compatibility.
}
\examples{
\dontrun{
# Single study analysis
dfBootstrap <- Analyze_StudyKRI(
  dfInput = dfInput,
  nBootstrapReps = 1000,
  seed = 42
)

dfBootstrapStudy <- Transform_CumCount(
  dfInput = dfBootstrap,
  vBy = c("StudyID", "BootstrapRep"),
  nMinDenominator = 25
)

dfBounds <- Analyze_StudyKRI_PredictBounds(
  dfInput = dfBootstrapStudy,
  vBy = "StudyID",
  nConfLevel = 0.95
)

# Multi-study comparison (combined)
dfComparison <- dfBootstrapStudy \%>\%
  dplyr::filter(StudyID \%in\% c("STUDY1", "STUDY2", "STUDY3"))

dfGroupBounds <- Analyze_StudyKRI_PredictBounds(
  dfInput = dfComparison,
  vBy = character(0),  # Combine all studies
  nConfLevel = 0.95
)
}

}
