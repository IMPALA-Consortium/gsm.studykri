% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analyze_StudyKRI.R
\name{Analyze_StudyKRI}
\alias{Analyze_StudyKRI}
\title{Generate Bootstrap Resamples for Study-Level KRI Analysis}
\usage{
Analyze_StudyKRI(
  dfInput,
  nBootstrapReps = 1000,
  nGroups = NULL,
  strStudyCol = "StudyID",
  strGroupCol = "GroupID",
  seed = NULL
)
}
\arguments{
\item{dfInput}{data.frame or tbl_lazy. Group-level data from \code{Input_CumCountSiteByMonth}.
Expected columns: GroupID, GroupLevel, Numerator, Denominator, Metric,
StudyID, MonthYYYYMM (or custom column names specified in parameters).}

\item{nBootstrapReps}{integer. Number of bootstrap replicates to generate.
Defaults to 1000.}

\item{nGroups}{integer or NULL. Number of groups to resample per replicate.
If NULL (default), uses the actual number of groups per study. If specified,
can be used to upsample (larger than actual) or downsample (smaller than actual).}

\item{strStudyCol}{character. Column name for study identifier. Defaults to "StudyID".}

\item{strGroupCol}{character. Column name for group identifier. Defaults to "GroupID".}

\item{seed}{integer or NULL. Random seed for reproducibility. If NULL (default),
no seed is set. Note: seed only affects in-memory data frames, not SQL queries.}
}
\value{
A data.frame (or tbl_lazy if input was lazy) with all original columns plus:
\itemize{
\item \code{BootstrapRep}: integer, bootstrap replicate number (1 to nBootstrapReps)
\item Original data rows are replicated across bootstrap samples with groups
resampled with replacement
}
}
\description{
Generates bootstrap resamples by resampling groups (sites/countries) with
replacement within each study. Uses dbplyr-compatible approach with runif()
for random selection. Each bootstrap replicate randomly selects groups and
includes all their associated data.
}
\examples{
# Generate group-level data
dfSubjects <- clindata::rawplus_dm
dfNumerator <- clindata::rawplus_ae
dfDenominator <- clindata::rawplus_visdt

dfInput <- Input_CumCountSiteByMonth(
  dfSubjects = dfSubjects,
  dfNumerator = dfNumerator,
  dfDenominator = dfDenominator,
  strNumeratorDateCol = "aest_dt",
  strDenominatorDateCol = "visit_dt"
)

# Generate bootstrap samples
dfBootstrap <- Analyze_StudyKRI(
  dfInput = dfInput,
  nBootstrapReps = 100,
  seed = 42
)

# Aggregate each bootstrap replicate to study level
dfStudyLevel <- Transform_CumCount(
  dfInput = dfBootstrap,
  vBy = c("StudyID", "BootstrapRep"),
  nMinDenominator = 25
)

print(head(dfStudyLevel))

}
